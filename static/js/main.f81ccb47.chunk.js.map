{"version":3,"sources":["commons/hooks/useAxios.ts","components/card/Card.tsx","pages/home/HomePage.tsx","pages/about/AboutPage.tsx","pages/todo/context.ts","pages/todo/components/TodoForm.tsx","pages/todo/reducer.ts","pages/todo/components/TodoHeader.tsx","pages/todo/components/TodoList.tsx","pages/todo/TodoPage.tsx","commons/hooks/usePersist.ts","components/nav-bar/NavBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["cache","axiosInstance","actions","REQUEST_START","REQUEST_END","ssrPromises","cacheAdapter","config","a","cacheKey","JSON","stringify","hit","get","adapter","response","responseForCache","request","set","reducer","state","action","type","loading","error","data","payload","dispatch","executeRequestWithCache","executeRequestWithoutCache","LRU","DefaultAxios","PhdCard","useState","count","setCount","useEffect","document","title","console","log","options","manual","url","React","useReducer","createInitialState","window","push","configOverride","useCache","useAxios","className","onClick","HomePage","Component","AboutPage","Store","createContext","todos","TodoForm","useContext","todo","setTodo","handleTodoAdd","value","autoFocus","placeholder","onKeyUp","event","keyCode","onChange","e","target","includes","filter","t","TodoHeader","props","children","TodoList","header","length","map","key","style","marginLeft","TodoPage","globalStore","context","persistedContext","localStorage","getItem","parse","usePersistedContext","TodoStore","setItem","usePersistedReducer","Provider","NavBar","current","handleClick","setState","this","selectedKeys","mode","Item","to","exact","path","component","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f81ccb47.chunk.js","sourcesContent":["/*\n * based on: https://github.com/simoneb/axios-hooks\n * The MIT License (MIT)\n * Copyright (c) 2015-present Dan Abramov\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport React from 'react'\nimport DefaultAxios from 'axios'\nimport LRU from 'lru-cache'\n\nconst actions = {\n  REQUEST_START: 'REQUEST_START',\n  REQUEST_END: 'REQUEST_END'\n};\n\nconst ssrPromises: any[] = [];\n\nlet cache: any;\nlet axiosInstance: any;\n\nexport function resetConfigure() {\n  cache = new LRU();\n  axiosInstance = DefaultAxios\n}\n\nresetConfigure();\n\nexport function configure(options: any) {\n  if (options.axios) {\n    axiosInstance = options.axios\n  }\n\n  if (options.cache) {\n    cache = options.cache\n  }\n}\n\nexport function loadCache(data: any) {\n  cache.load(data)\n}\n\nexport async function serializeCache() {\n  await Promise.all(ssrPromises);\n\n  ssrPromises.length = 0;\n\n  return cache.dump()\n}\n\nasync function cacheAdapter(config: any) {\n  const cacheKey = JSON.stringify(config);\n  const hit = cache.get(cacheKey);\n\n  if (hit) {\n    return hit\n  }\n\n  delete config.adapter;\n\n  const response = await axiosInstance(config);\n\n  const responseForCache = {...response};\n  delete responseForCache.config;\n  delete responseForCache.request;\n\n  cache.set(cacheKey, responseForCache);\n\n  return response\n}\n\nfunction createInitialState(options: any) {\n  return {\n    loading: !options.manual\n  }\n}\n\nfunction reducer(state: any, action: any) {\n  switch (action.type) {\n    case actions.REQUEST_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case actions.REQUEST_END:\n      return {\n        ...state,\n        loading: false,\n        ...(action.error ? {} : {data: action.payload.data}),\n        [action.error ? 'error' : 'response']: action.payload\n      };\n    default:\n      return state\n  }\n}\n\nasync function request(config: any, dispatch: any) {\n  try {\n    dispatch({type: actions.REQUEST_START});\n    const response = await axiosInstance(config);\n    dispatch({type: actions.REQUEST_END, payload: response})\n  } catch (err) {\n    dispatch({type: actions.REQUEST_END, payload: err, error: true})\n  }\n}\n\nfunction executeRequestWithCache(config: any, dispatch: any): any {\n  request({...config, adapter: cacheAdapter}, dispatch)\n}\n\nfunction executeRequestWithoutCache(config: any, dispatch: any) {\n  return request(config, dispatch)\n}\n\nexport default function useAxios(config: any, options = {manual: false}) {\n  if (typeof config === 'string') {\n    config = {\n      url: config\n    }\n  }\n\n  const [state, dispatch] = React.useReducer(\n    reducer,\n    createInitialState(options)\n  );\n\n  if (typeof window === 'undefined') {\n    ssrPromises.push(axiosInstance({...config, adapter: cacheAdapter}))\n  }\n\n  React.useEffect(() => {\n    if (!options.manual) {\n      executeRequestWithCache(config, dispatch)\n    }\n    // eslint-disable-next-line\n  }, [JSON.stringify(config), config, options]);\n\n  return [\n    state,\n    (configOverride: any, options = {useCache: false}) => {\n      if (options.useCache) {\n        return executeRequestWithCache(\n          {...config, ...configOverride},\n          dispatch\n        )\n      }\n\n      return executeRequestWithoutCache(\n        {...config, ...configOverride},\n        dispatch\n      )\n    }\n  ]\n}\n","import React, {useEffect, useState} from 'react';\n\nimport useAxios from \"../../commons/hooks/useAxios\";\n\nfunction PhdCard() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n    return function cleanup() {\n      console.log('cleanup');\n    }\n  });\n\n  const [{data, loading, error}, executeRequestWithCache] = useAxios(\n    'https://api.myjson.com/bins/820fc'\n    , {manual: true});\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error!</p>\n\n  return (\n    <div className=\"card\">\n      Card {count} -\n      <button onClick={executeRequestWithCache}>refetch</button>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  )\n}\n\nexport default PhdCard;\n","import React, { Component } from 'react';\nimport PhdCard from \"../../components/card/Card\";\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div className=\"home\">\n        home\n        <PhdCard></PhdCard>\n      </div>\n    )\n  };\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\n\nclass AboutPage extends Component {\n  render() {\n    return (\n      <div className=\"about\">\n        about\n      </div>\n    )\n  };\n}\n\nexport default AboutPage;\n","import React from \"react\";\n\nconst Store = React.createContext({\n  todos: [\n    \"Buy milk\",\n    \"Some eggs\",\n    \"Go to work\"\n  ]\n});\n\nexport default Store;\n","import React, {useContext, useState} from 'react';\nimport Store from \"../context\";\n\nexport default function TodoForm() {\n  const { dispatch } = useContext(Store) as any;\n\n  // Creating a local state to have currently writing\n  // todo item that will be sent to the global store.\n  const [todo, setTodo] = useState(\"\");\n\n  function handleTodoChange(e: any) {\n    setTodo(e.target.value);\n  }\n\n  function handleTodoAdd() {\n    dispatch({ type: \"ADD_TODO\", payload: todo });\n    setTodo(\"\");\n  }\n\n  function handleSubmitForm(event: any) {\n    if (event.keyCode === 13) handleTodoAdd();\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-12\">\n        <br />\n        <div className=\"input-group\">\n          <input\n            className=\"form-control\"\n            value={todo}\n            autoFocus={true}\n            placeholder=\"Enter new todo\"\n            onKeyUp={handleSubmitForm}\n            onChange={handleTodoChange}\n          />\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-primary\" onClick={handleTodoAdd}>\n              Add\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export default function reducer(state: any, action: any) {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      // return current state if empty\n      if (!action.payload) {\n        return state;\n      }\n      // return current state if duplicate\n      if (state.todos.includes(action.payload)) {\n        return state;\n      }\n      return {\n        ...state,\n        todos: [...state.todos, action.payload]\n      };\n    case \"COMPLETE\":\n      return {\n        ...state,\n        todos: state.todos.filter((t: any) => {\n          return t !== action.payload\n        })\n      };\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\n\nexport const TodoHeader = (props: any) => (\n  <div className=\"row\">\n    <div className=\"col-md-8\">\n      <h5>Todo List</h5>\n    </div>\n    <div className=\"col-md-4\">\n      {props.children}\n    </div>\n  </div>\n);\n","import React, { useContext } from \"react\";\nimport Store from \"../context\";\nimport { TodoHeader } from \"./TodoHeader\";\n\nexport default function TodoList() {\n  // @ts-ignore\n  const { state, dispatch } = useContext(Store);\n\n  const pluralize = (count: any) =>\n    count > 1 ? `There are ${count} todos.` : `There is ${count} todo.`;\n\n  let header =\n    state.todos.length === 0 ? (\n      <h4>Yay! All todos are done! Take a rest!</h4>\n    ) : (\n      <TodoHeader>\n        <span className=\"float-right\">{pluralize(state.todos.length)}</span>\n      </TodoHeader>\n    );\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-12\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <br />\n            {header}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <ul className=\"list-group\">\n              {state.todos.map((t: any) => (\n                <li key={t} className=\"list-group-item\">\n                  {t}\n                  <button\n                    className=\"float-right btn btn-danger btn-sm\"\n                    style={{ marginLeft: 10 }}\n                    onClick={() => dispatch({ type: \"COMPLETE\", payload: t })}\n                  >\n                    Complete\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, {useContext, useReducer} from 'react';\n\nimport TodoForm from \"./components/TodoForm\";\nimport {usePersistedContext, usePersistedReducer} from \"../../commons/hooks/usePersist\";\nimport TodoStore from \"./context\";\nimport reducer from \"./reducer\";\nimport TodoList from \"./components/TodoList\";\n\nfunction TodoPage() {\n  // create a global store to store the state\n  const globalStore = usePersistedContext(useContext(TodoStore), \"state\");\n\n  // `todos` will be a state manager to manage state.\n  const [state, dispatch, todos] = usePersistedReducer(\n    useReducer(reducer, globalStore),\n    \"state\" // The localStorage key\n  );\n\n  return (\n    // @ts-ignore\n    <TodoStore.Provider value={{state, dispatch, todos}}>\n      <TodoForm />\n      <TodoList />\n    </TodoStore.Provider>\n  );\n}\n\nexport default TodoPage;\n","import {useEffect} from \"react\";\n\nexport function usePersistedContext(context: any, key = \"state\") {\n  const persistedContext = localStorage.getItem(key);\n  return persistedContext ? JSON.parse(persistedContext) : context;\n}\n\nexport function usePersistedReducer([state, dispatch]: any, key = \"state\") {\n  useEffect(() => localStorage.setItem(key, JSON.stringify(state)), [key, state]);\n  return [state, dispatch];\n}\n","import React, {Component} from 'react';\nimport {Menu, Icon} from 'antd';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport HomePage from '../../pages/home/HomePage';\nimport AboutPage from \"../../pages/about/AboutPage\";\nimport TodoPage from \"../../pages/todo/TodoPage\";\n\nclass NavBar extends Component {\n  state = {\n    current: 'mail',\n  };\n\n  handleClick = (e: any) => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  };\n\n  render() {\n    return (\n      <Router>\n        <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\n          <Menu.Item key=\"app\">\n            <Link to=\"/\"><Icon type=\"home\"/> Home</Link>\n          </Menu.Item>\n          <Menu.Item key=\"about\">\n            <Link to=\"/about\"><Icon type=\"question\"/>About</Link>\n          </Menu.Item>\n          <Menu.Item key=\"todo\">\n            <Link to=\"/todo\"><Icon type=\"todo\"/>Todo</Link>\n          </Menu.Item>\n        </Menu>\n\n        <Route exact path=\"/\" component={HomePage}/>\n        <Route exact path=\"/about\" component={AboutPage}/>\n        <Route exact path=\"/todo\" component={TodoPage}/>\n      </Router>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from 'react';\n\nimport './App.css';\nimport NavBar from \"./components/nav-bar/NavBar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar></NavBar>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}